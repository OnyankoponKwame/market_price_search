<template>
  <div>
    <div class="search">
      <input v-model="keyword" />
      <button v-on:click="aaa()">検索</button>
    </div>

    <Suspense>
      <ScatterChart
        :key="resetKey"
        v-if="resetFlag"
        :keyword="keyword"
      />
    </Suspense>
  </div>
</template>

<script>
import ScatterChart from "./src/scatterChart";
import { ref } from "vue";
// import { Chart } from 'chart.js';
import Chart from 'chart.js/auto';

export default {
  components: {
    ScatterChart,
  },

  setup(props, context) {
    let resetFlag = ref(false);
    let resetKey = ref(0);
    let keyword = ref<String>('');
    window.myChart = null
    function updateChart() {
      if (keyword.value) {
        resetFlag.value = true;
        resetKey.value++;
      } else {
        resetFlag.value = false;
      }
    }

    async function aaa() {
        if (myChart) {
          myChart.destroy();
        }

        let params = { keyword: keyword.value }
        let query = new URLSearchParams(params);
        let data = await fetch(`/api/v1/items?${query}`);
        let json = await data.json()
        let sale_array = []
        let sold_array = []

        for (let elem of JSON.parse(json['sale_array'])) {
          var x = elem[0];
          var y = elem[1];
          sale_array.push({ x: x, y: y });
        };

        for (let elem of JSON.parse(json['sold_array'])) {
          var x = elem[0];
          var y = elem[1];
          sold_array.push({ x: x, y: y });
        };

        // チャートのデータ
        const scatterChartData = {
          datasets: [{
            label: 'Group1',
            data: sale_array,
            backgroundColor: 'rgba(0, 159, 255, 0.45)'
          },{
            label: 'Group2',
            data: sold_array,
            backgroundColor: 'rgba(255, 48, 32, 0.45)'
          }
        ],
        };

        const scatterChartOption = {
          scales: {
            x: {
              scaleLabel: {
                display: true,
                labelString: '時間'
              },
              type: 'time',
              time: {
                parser: 'YYYY-MM-DD',
                unit: 'day',
                stepSize: 1,
                displayFormats: {
                  'day': 'H時'
                }
              }
            }
          }
        };

        //チャートを表示
        const scatterChartContext = document.getElementById('mychart').getContext('2d');
        myChart = new Chart(scatterChartContext, {
          type: 'scatter',
          data: scatterChartData,
          options: scatterChartOption
        });
    }

    return {
      keyword,
      updateChart,
      resetFlag,
      resetKey,
      aaa,
      sale_array,
      sold_array,
    };
  },
};
</script>